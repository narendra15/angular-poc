transform(timestamp: string): string {
  const timezoneOffsets: { [key: string]: string } = {
    'EST': 'America/New_York',
    'PST': 'America/Los_Angeles',
    'MST': 'America/Denver',
    'CST': 'America/Chicago',
    'AST': 'America/Halifax',
    'UTC': 'UTC'
  };

  const timeZone = timezoneOffsets[this.selectedTimezone] || 'UTC';

  // Parse timestamp as if it's in America/New_York (EST/EDT from DB)
  const estDate = new Date(timestamp); // already assumed to be EST/EDT

  // Format full date
  const dateStr = new Intl.DateTimeFormat('en-US', {
    timeZone,
    month: 'long',
    day: 'numeric',
    year: 'numeric'
  }).format(estDate);

  // Format time
  const timeStr = new Intl.DateTimeFormat('en-US', {
    timeZone,
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit',
    hour12: false
  }).format(estDate);

  // Format short time zone abbreviation
  const timeZoneAbbr = new Intl.DateTimeFormat('en-US', {
    timeZone,
    timeZoneName: 'short'
  }).formatToParts(estDate).find(part => part.type === 'timeZoneName')?.value || '';

  return `${dateStr}, ${timeStr} ${timeZoneAbbr}`;
}








import { DateTime } from 'luxon';

transform(timestamp: string): string {
  const timezoneOffsets: { [key: string]: string } = {
    'EST': 'America/New_York',
    'PST': 'America/Los_Angeles',
    'MST': 'America/Denver',
    'CST': 'America/Chicago',
    'AST': 'America/Halifax',
    'UTC': 'UTC'
  };

  const targetZone = timezoneOffsets[this.selectedTimezone] || 'UTC';

  // Interpret the timestamp as America/New_York time (coming from DB)
  const easternDate = DateTime.fromISO(timestamp, { zone: 'America/New_York' });

  // Convert to UTC
  const utcDate = easternDate.toUTC(); // ‚Üê this is your "//here"

  // Format in the desired time zone
  const formattedDate = utcDate.setZone(targetZone);

  const dateStr = formattedDate.toLocaleString({
    month: 'long',
    day: 'numeric',
    year: 'numeric'
  });

  const timeStr = formattedDate.toLocaleString(DateTime.TIME_24_WITH_SECONDS);

  const timeZoneAbbr = formattedDate.offsetNameShort;

  return `${dateStr}, ${timeStr} ${timeZoneAbbr}`;
}

