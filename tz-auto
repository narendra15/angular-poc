transform(rawTs: string): string {
  const zoneMap: Record<string, string> = {
    EST: 'America/New_York',
    PST: 'America/Los_Angeles',
    MST: 'America/Denver',
    CST: 'America/Chicago',
    AST: 'America/Halifax',
    UTC: 'UTC'
  };
  const displayZone = zoneMap[this.selectedTimezone] ?? 'UTC';

  // ── clean the bogus “Z” and parse as NY time ──────────────────────────────
  const clean    = rawTs.endsWith('Z') ? rawTs.slice(0, -1) : rawTs;
  const nyLocal  = DateTime.fromISO(clean, { zone: 'America/New_York', setZone: true });
  if (!nyLocal.isValid) return 'Invalid timestamp';

  // ── convert to UTC → convert to chosen zone ───────────────────────────────
  const shown = nyLocal.toUTC().setZone(displayZone);

  // ── format pieces exactly the way you showed ─────────────────────────────
  const datePart = shown.toLocaleString({ month: 'long', day: 'numeric', year: 'numeric' });
  const timePart = shown.toFormat('HH:mm:ss');       // 24-hour; use 'hh:mm:ss' for 12-hour
  const abbr     = shown.offsetNameShort;            // EST / EDT / UTC / …

  return `${datePart} ${timePart} ${abbr}`;          // ← no extra comma here
}
