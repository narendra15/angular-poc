transform(timestamp: string): string {
  const zoneMap: Record<string, string> = {
    EST: 'America/New_York',
    PST: 'America/Los_Angeles',
    MST: 'America/Denver',
    CST: 'America/Chicago',
    AST: 'America/Halifax',
    UTC: 'UTC'
  };

  const displayZone = zoneMap[this.selectedTimezone] ?? 'UTC';

  // 1. Tell Luxon the string is in New York **and** tell it to keep that zone
  const localNY = DateTime.fromISO(timestamp, {
    zone: 'America/New_York',
    setZone: true          // <-- the critical flag!
  });                                        //  ⬆️  uses EDT/EST automatically

  // 2. Convert to true UTC
  const utc = localNY.toUTC();               // 2025-07-15T01:12:10Z

  // 3. Convert to whatever zone the user picked in the UI
  const final = utc.setZone(displayZone);    // EST→21:12  |  PST→18:12  |  UTC→01:12

  // 4. Format
  const dateStr = final.toLocaleString({ year: 'numeric', month: 'long', day: 'numeric' });
  const timeStr = final.toFormat('HH:mm:ss');
  const abbr    = final.offsetNameShort;     // “EDT”, “PDT”, “UTC”, …

  return `${dateStr}, ${timeStr} ${abbr}`;
}
