export function formatUserAppsObj(codes: any[]): UserAppsRolesObj {
  const userApps: UserAppsMap = {};

  codes.forEach((code) => {
    const parts = String(code).split('|').map(p => p.trim());
    if (parts.length < 3) return;

    const [appRaw, roleRaw, urlRaw] = parts;
    if (!appRaw || !roleRaw || !urlRaw) return;

    const app = appRaw.toLowerCase();
    const role = roleRaw.toUpperCase();
    const url  = urlRaw;

    if (!userApps[app]) {
      userApps[app] = { roles: [], url };
    } else {
      const existingUrl = userApps[app].url;
      if (existingUrl && existingUrl !== url) {
        throw new Error(
          `URL mismatch for app "${app}": "${existingUrl}" vs "${url}".`
        );
      }
    }

    if (!userApps[app].url) userApps[app].url = url;

    if (!userApps[app].roles.includes(role)) {
      userApps[app].roles.push(role);
    }
  });

  return { user_apps: userApps };
}
