import Papa from 'papaparse';

/**
 * Remove duplicate CSV rows based on a combination of key columns.
 * - Case-insensitive comparisons
 * - No trimming of values
 */
export function dedupeCsvByKeys(csv: string, keys: string[]): string {
  if (!csv?.trim() || !keys?.length) return csv;

  const parsed = Papa.parse(csv, {
    header: true,
    skipEmptyLines: 'greedy',
    dynamicTyping: false,
  });

  if (!Array.isArray(parsed.data) || parsed.data.length === 0) return csv;

  const rows = parsed.data as Record<string, string>[];
  const fields = parsed.meta.fields ?? Object.keys(rows[0] ?? {});
  const seen = new Set<string>();
  const out: Record<string, string>[] = [];

  const makeKey = (row: Record<string, any>) =>
    JSON.stringify(keys.map(k => String(row?.[k] ?? '').toLowerCase()));

  for (const row of rows) {
    const key = makeKey(row);
    if (!seen.has(key)) {
      seen.add(key);
      out.push(row); // keep first
    }
  }

  // Preserve original column order
  return Papa.unparse({ fields, data: out });
}
