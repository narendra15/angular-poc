applySearchBoxFilters() {
  const searchTerm = this.searchInput?.toLowerCase() || '';

  this.fileGridFilteredData = this.fileOriginalData.filter((row: any) => {
    const metadataKeysWithChanges: Set<string> = new Set();
    let metadataMatch = false;

    if (row.status === 'M') {
      let metadataArray: any[] = [];

      // Convert object with numeric keys to array
      if (Array.isArray(row.metadata)) {
        metadataArray = row.metadata;
      } else if (row.metadata && typeof row.metadata === 'object') {
        metadataArray = Object.values(row.metadata);
      }

      metadataMatch = metadataArray.some((metaItem: any) => {
        return Object.entries(metaItem).some(([key, entry]: [string, any]) => {
          if (entry?.new_value) {
            metadataKeysWithChanges.add(key);
            if (
              typeof entry.new_value === 'string' &&
              entry.new_value.toLowerCase().includes(searchTerm)
            ) {
              return true;
            }
          }
          return false;
        });
      });
    }

    const topLevelMatch = Object.entries(row).some(([key, value]: [string, any]) => {
      return (
        !metadataKeysWithChanges.has(key) &&
        typeof value === 'string' &&
        value.toLowerCase().includes(searchTerm)
      );
    });

    return topLevelMatch || metadataMatch;
  });
}
