function formatValue(value: string | number, dataType: 'decimal' | 'integer'): string {
  if (dataType === 'decimal') {
    const num = Number(value);
    if (isNaN(num)) return String(value); // in case it's not a valid number
    return num.toFixed(3);
  } else if (dataType === 'integer') {
    // Remove leading zeros but keep '0' if value is 0 or all zeros
    return String(Number(value));
  }
  return String(value);
}




const upDatedBody = lines.slice(1).map((line: string) => {
  // âœ… Split correctly even when commas are inside quotes
  const cols = line.match(/(".*?"|[^",]+)(?=\s*,|\s*$)/g) || [];

  const formattedCols = cols.map((val) => {
    // Remove wrapping quotes temporarily for detection
    const cleanVal = val.replace(/^"|"$/g, '');

    if (cleanVal.includes('.') && !isNaN(Number(cleanVal))) {
      return this.formatValue(cleanVal, 'decimal');
    } else if (!isNaN(Number(cleanVal))) {
      return this.formatValue(cleanVal, 'integer');
    }

    // Keep quotes if originally quoted
    return val;
  });

  return formattedCols.join(',');
});
